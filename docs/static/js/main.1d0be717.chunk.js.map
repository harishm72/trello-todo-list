{"version":3,"sources":["components/RestAPI.js","components/Header.js","components/BoardHeader.js","components/Card.js","components/BoardCards.js","components/BoardLists.js","components/BoardContent.js","components/Board.js","components/CheckListItem.js","components/CheckList.js","components/Modal.js","App.js","index.js"],"names":["key","token","boardID","RestAPI","getBoardData","fetch","concat","headers","Content-Type","Accept","getLists","addNewList","listName","method","deleteList","listId","getCards","addNewCard","cardName","deleteCard","cardId","getCheckList","AddCheckList","checkListName","deleteCheckList","addItemToCheckList","checkListId","checkListItemName","deleteCheckListItem","checkListItemId","updateCheckListItem","cardID","state","Header","react_default","a","createElement","className","src","alt","React","Component","BoardHeader","name","this","props","Card","_this","Object","classCallCheck","_super","call","checkList","event","card","id","deleteThisCard","isChListVisible","display","_this$props$card","onClick","BoardCards","then","res","json","data","setState","cards","isCards","newCardvisible","formVisible","closeAddCard","addCard","newCardName","target","value","cardSubmit","preventDefault","newCard","deletedCard","filter","_this2","map","eachcard","components_Card","style","onSubmit","onChange","placeholder","BoardLists","list","components_BoardCards","BoardContent","newListvisible","closeAddList","addList","newListName","listSubmit","lists","eachlist","components_BoardLists","autoFocus","Board","_this$props","components_BoardHeader","components_BoardContent","CheckListItem","HandleCheck","refs","checkbox","checked","idCard","item","idChecklist","status","textDecoration","_this$props$item","type","ref","CheckList","addItem","newItem","checkItems","components_CheckListItem","Modal","addCheckList","children","show","close","_this$props$children","checklists","transform","opacity","eachCheckList","components_CheckList","App","getData","feedData","boardData","isData","catch","err","console","log","allLists","newList","deletedList","checkLists","modalChildren","modalShow","update","boardId","cardTitle","_this$state$boardData","prefs","bgimage","backgroundImage","components_Header","components_Board","components_Modal","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d0be717.chunk.js","sourcesContent":["let key = \"564afb2242914977a9ebb653b53a89a8\";\nlet token = \"e6a08b9a2c92190fb334fcad5adc7457f616e804279aeaec371ae6267ac138f7\";\nlet boardID = \"5c405ce05818a51c5c0836c3\";\n\nlet getBoardData = () => {\n    return fetch(`https://api.trello.com/1/boards/${boardID}?key=${key}&token=${token}`, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n}\n\nlet getLists = () =>{\n    return fetch(`https://api.trello.com/1/boards/${boardID}/lists?key=${key}&token=${token}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }})\n}\n\nlet getCards = (listId) =>{\n    // requires listId to identify which list cards belongs\n    return  fetch(`https://api.trello.com/1/lists/${listId}/cards?key=${key}&token=${token}`, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }})\n}\nlet addNewList = (listName) =>{\n    return  fetch(`https://api.trello.com/1/lists?name=${listName}&idBoard=${boardID}&key=${key}&token=${token}`,\n    {method : 'POST'})\n}\nlet deleteList = (listId) =>{\n    return fetch(`https://api.trello.com/1/lists/${listId}/closed/?key=${key}&token=${token}&value=true`, {\n        method : 'PUT'\n    })\n}\nlet addNewCard = (cardName, listId) =>{\n    return fetch(`https://api.trello.com/1/cards?idList=${listId}&name=${cardName}&key=${key}&token=${token}`, {\n        method : 'POST'\n    })\n}\n\nlet deleteCard = (cardId) =>{\n    return fetch(`https://api.trello.com/1/cards/${cardId}?key=${key}&token=${token}`, {\n        method : 'DELETE'\n    })\n}\n\nlet getCheckList = (cardId) =>{\n    return fetch(`https://api.trello.com/1/cards/${cardId}?attachment_fields=all&checkItemStates=true&checklists=all&checklist_fields=all&sticker_fields=all&key=${key}&token=${token}`)\n}\n\nlet AddCheckList = (cardId, checkListName) =>{\n    return fetch(`https://api.trello.com/1/checklists?idCard=${cardId}&name=${checkListName}&key=${key}&token=${token}`, {\n        method: 'POST'\n    })\n}\n\nlet deleteCheckList = (cardId) =>{\n    return fetch(`https://api.trello.com/1/checklists/${cardId}?key=${key}&token=${token}`,{\n        method : 'DELETE'\n    })\n}\nlet addItemToCheckList = (checkListId, checkListItemName) =>{\n    return fetch(`https://api.trello.com/1/checklists/${checkListId}/checkItems?name=${checkListItemName}&pos=bottom&checked=false&key=${key}&token=${token}`, {\n        method : 'POST'\n    })\n}\nlet deleteCheckListItem = (checkListId, checkListItemId) =>{\n    return fetch(`https://api.trello.com/1/checklists/${checkListId}/checkItems/${checkListItemId}?key=${key}&token=${token}`,{\n        method : 'DELETE'\n    })\n}\n\nlet updateCheckListItem = (cardID, checkListItemId, checkListId, state) =>{\n    return fetch(`https://api.trello.com/1/cards/${cardID}/checkItem/${checkListItemId}?state=${state}&idChecklist=${checkListId}&key=${key}&token=${token}`,{\n        method : 'PUT'\n    })\n}\nexport default {key, token, boardID, getBoardData, \n                getLists, addNewList, deleteList,\n                getCards, addNewCard, deleteCard, \n                getCheckList, AddCheckList, deleteCheckList,\n                addItemToCheckList, deleteCheckListItem, updateCheckListItem}","import React from 'react';\n\nclass Header extends React.Component{\n    render(){\n        return(\n            <div className=\"app-header\">\n                <img className=\"app-logo\" src=\"./logo.png\" alt=\"\"></img>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\n\nclass BoardHeader extends Component{\n    render(){\n        const {name} = this.props;\n        return(\n            <div className=\"board-header\">\n            <div className=\"board-name\">{name} Clone</div>\n            </div>\n        )\n    }\n}\n\nexport default BoardHeader;","import React, {Component} from 'react';\n\nclass Card extends Component{\n\n    constructor(props){\n        super(props)\n        this.state ={\n            isChListVisible : {\n                display : \"none\"\n            }\n        }\n    }\n    checkList = (event) =>{\n        this.props.checkList(this.props.card.id);\n    }\n    deleteThisCard = () =>{\n        this.props.deleteCard(this.props.card.id)\n    }\n    render(){\n        const {id, name} = this.props.card;\n        return(\n            <div id={`${id}-card`} onClick={this.checkList} className=\"card\">\n                <div className=\"card-title\">{name}</div>\n                <button id={id} className=\"delete-card\" onClick={this.deleteThisCard}>&#128465;</button>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React, {Component} from 'react';\nimport Card from './Card';\nimport RestAPI from './RestAPI';\n\nclass BoardCards extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state ={\n            cards : [],\n            isCards : true,\n            cardName : \"\",\n            formVisible : {display : \"none\"},\n            newCardvisible :{display : \"block\"}\n        }\n        this.getCards(this.props.listId)\n    }\n    getCards = (listId) =>{\n        RestAPI.getCards(listId)\n        .then(res => res.json())\n        .then(data => \n            this.setState({\n            cards : data,\n            isCards : true\n        }))\n    }\n    addNewCard = () =>{\n        this.setState({newCardvisible : {display : \"none\"}, formVisible : {\"display\" : \"flex\"}})\n    }\n    closeAddCard = () =>{\n        this.setState({newCardvisible : {display : \"block\"}, formVisible : {\"display\" : \"none\"}})\n    }\n    addCard = (event) =>{\n        let newCardName = event.target.value\n        this.setState({cardName : newCardName})\n    }\n    cardSubmit = (event) =>{\n        event.preventDefault();\n        if(this.state.cardName){\n            this.closeAddCard();\n\n            RestAPI.addNewCard(this.state.cardName, this.props.listId)\n                .then(res => res.json())\n                .then(newCard => this.setState({cards : this.state.cards.concat(newCard)}))\n            this.setState({cardName : \"\"})\n\n        }\n    }\n    deleteCard = (id) =>{\n       // this.setState({cards : this.state.cards.filter(card => card.id !== id)})\n        RestAPI.deleteCard(id)\n        .then(res => res.json())\n        .then(deletedCard => this.setState({cards : this.state.cards.filter(card => card.id !== id)}))\n    }\n    render(){\n        if(this.state.isCards){\n            let listId = this.props.listId;\n            return(\n                <div>\n                    <div className=\"add-scroll\">\n                        {this.state.cards.map(eachcard =>\n                            (<Card card={eachcard} deleteCard={this.deleteCard} checkList={this.props.checkList}/>))}\n                    </div>\n                    <div className=\"add-card\">\n                        <button id={listId} style={this.state.newCardvisible} onClick={this.addNewCard}className=\"add-new-card\"> + Add a card</button>\n                        <form className=\"card new-card-form\" onSubmit={this.cardSubmit} style={this.state.formVisible}>\n                            <input className=\"new-card-name\" value={this.state.cardName} onChange={this.addCard} placeholder=\"Enter a title for this card...\"></input>\n                            <button className=\"new-card-add\" onClick={this.cardSubmit}>Add Card</button>\n                            <button className=\"new-card-close\" onClick={this.closeAddCard}>&#128465;</button>\n                        </form>\n                    </div>\n                </div> )}\n        else return( <p>Loading......</p>)\n    }\n}\n\nexport default BoardCards;\n","import React from \"react\";\nimport BoardCards from \"./BoardCards\";\n\nconst BoardLists = (props) => {\n  const deleteThisList = () => {\n    props.deleteList(props.list.id);\n  };\n  const { list, checkList } = props;\n  return (\n    <div className=\"board-cards\">\n      <div className=\"list-head\">\n        <p className=\"card-name\">{list[\"name\"]}</p>\n        <button\n          id={list[\"id\"]}\n          className=\"delete-list\"\n          onClick={deleteThisList}\n        >\n          &#128465;\n        </button>\n      </div>\n      <BoardCards listId={list.id} checkList={checkList} />\n    </div>\n  );\n};\n\nexport default BoardLists;\n","import React, { Component } from \"react\";\nimport BoardList from \"./BoardLists\";\n\nclass BoardContent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      listName: \"\",\n      formVisible: { display: \"none\" },\n      newListvisible: { display: \"block\" },\n    };\n  }\n  addNewList = () => {\n    this.setState({ formVisible: { display: \"flex\" } });\n    this.setState({ newListvisible: { display: \"none\" } });\n  };\n  closeAddList = () => {\n    this.setState({ formVisible: { display: \"none\" } });\n    this.setState({ newListvisible: { display: \"block\" } });\n  };\n  addList = (event) => {\n    let newListName = event.target.value;\n    this.setState({ listName: newListName });\n  };\n  listSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.listName) {\n      this.setState({ listName: \"\" });\n      this.closeAddList();\n      this.props.addNewList(this.state.listName);\n    }\n  };\n  render() {\n    let lists = this.props.lists;\n    return (\n      <div className=\"boardContent\">\n        {lists.map((eachlist) => (\n          <BoardList\n            list={eachlist}\n            deleteList={this.props.deleteList}\n            checkList={this.props.checkList}\n          />\n        ))}\n\n        <div className=\"board-cards new-list\">\n          <button\n            className=\"add-new-list\"\n            style={this.state.newListvisible}\n            onClick={this.addNewList}\n          >\n            + Add another List\n          </button>\n          <form\n            className=\"new-list-form\"\n            style={this.state.formVisible}\n            onSubmit={this.listSubmit}\n          >\n            <input\n              className=\"new-list-name\"\n              value={this.state.listName}\n              autoFocus\n              onChange={this.addList}\n              placeholder=\"Enter a list title ...\"\n            ></input>\n            <button className=\"new-list-add\" onClick={this.listSubmit}>\n              Add List\n            </button>\n            <button className=\"new-list-close\" onClick={this.closeAddList}>\n              X\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default BoardContent;\n","import React, { Component } from \"react\";\nimport BoardHeader from \"./BoardHeader\";\nimport BoardContent from \"./BoardContent\";\n\nclass Board extends Component {\n  render() {\n    const { name, id, lists } = this.props;\n    return (\n      <div className=\"board\">\n        <BoardHeader name={name} id={id} />\n        <BoardContent\n          name={name}\n          id={id}\n          lists={lists}\n          addNewList={this.props.addNewList}\n          deleteList={this.props.deleteList}\n          checkList={this.props.checkList}\n        />\n      </div>\n    );\n  }\n}\nexport default Board;\n","import React, { Component } from \"react\";\n\nclass CheckListItem extends Component {\n  constructor(props) {\n    super(props);\n    if (this.props.item.state === \"complete\") {\n      this.state = {\n        status: true,\n        style: { textDecoration: \"line-through\" },\n      };\n    } else if (this.props.item.state === \"incomplete\") {\n      this.state = {\n        status: false,\n        style: { textDecoration: \"none\" },\n      };\n    }\n  }\n\n  HandleCheck = () => {\n    if (this.refs.checkbox.checked) {\n      this.props.updateCheckListItem(\n        this.props.idCard,\n        this.props.item.id,\n        this.props.item.idChecklist,\n        \"complete\"\n      );\n      this.setState({\n        status: true,\n        style: { textDecoration: \"line-through\" },\n      });\n    } else if (!this.refs.checkbox.checked) {\n      this.props.updateCheckListItem(\n        this.props.idCard,\n        this.props.item.id,\n        this.props.item.idChecklist,\n        \"incomplete\"\n      );\n      this.setState({\n        status: false,\n        style: { textDecoration: \"none\" },\n      });\n    }\n  };\n\n  deleteCheckListItem = () => {\n    this.props.deleteCheckListItem(\n      this.props.item.idChecklist,\n      this.props.item.id,\n      this.props.idCard\n    );\n  };\n\n  render() {\n    const { name, id } = this.props.item;\n    return (\n      <div className=\"check-list-item\">\n        <input\n          id={id}\n          type=\"checkbox\"\n          className=\"check-list-checkbox\"\n          ref=\"checkbox\"\n          checked={this.state.status}\n          onChange={this.HandleCheck}\n        ></input>\n        <h5 style={this.state.style} className=\"check-list-item-name\">\n          {name}\n        </h5>\n        <button\n          className=\"delete-checklist-item\"\n          onClick={this.deleteCheckListItem}\n        >\n          x\n        </button>\n      </div>\n    );\n  }\n}\nexport default CheckListItem;\n","import React, {Component} from 'react';\nimport CheckListItem from './CheckListItem';\nclass CheckList extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            newItem : \"\"\n        }\n    }\n    deleteCheckList = (event) =>{\n        this.props.deleteCheckList(this.props.list.id, this.props.list.idCard)\n    }\n    addItem = (event) => this.setState({newItem : event.target.value})\n    \n    addItemToCheckList = (event) =>{\n        event.preventDefault();\n        this.props.addItemToCheckList(this.props.list.id, this.state.newItem, this.props.list.idCard)\n        this.setState({newItem : \"\"})\n    }\n    render(){\n        let list = this.props.list\n        return(\n            <div className=\"check-list\">\n                <div>\n                    <div className=\"checklist-head\">\n                    <h3 className=\"checklist-name\">{list.name}</h3>\n                    <button className=\"delete-checklist\" onClick={this.deleteCheckList}>&#128465;</button>\n                    </div>\n                    <div>\n                         {this.props.list.checkItems.map(item => (<CheckListItem item={item} \n                         idCard={this.props.list.idCard} \n                         deleteCheckListItem={this.props.deleteCheckListItem}\n                        updateCheckListItem={this.props.updateCheckListItem}\n                        />))}\n                        <form onSubmit={this.addItemToCheckList}>\n                            <input className=\"add-checklist-item\" value={this.state.newItem} onChange={this.addItem} placeholder=\"+ add an item to your checklist\"></input>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n        }\n    }\n\nexport default CheckList;","import React, {Component} from 'react';\nimport CheckList from './CheckList';\nimport '../styles/App.css';\n\nclass Modal extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            checkListName : \"\"\n        }\n    }\n    checkListName = (event) =>{\n        this.setState({checkListName : event.target.value})\n    }\n    addCheckList = (event) =>{\n        event.preventDefault();\n        this.props.addCheckList(this.props.children.id, this.state.checkListName)\n        this.setState({checkListName : \"\"})\n    }\n    \n    render(){\n        const {show, close} = this.props\n        const {name, checklists} = this.props.children\n        return(\n            <div className=\"modal-wrapper\"\n            style={{\n                transform: show ? 'translateY(0vh)' : 'translateY(-800vh)',\n                opacity: show ? '1' : '0'\n            }}>\n            <div className=\"modal-header\">\n                <h3>{name}</h3>\n                <span className=\"close-modal-btn\" onClick={close}>×</span>\n            </div>\n            <div className=\"modal-body\">\n                <form onSubmit={this.addCheckList}>\n                <input className=\"add-check-list\" onChange={this.checkListName} value={this.state.checkListName} placeholder=\" + Add a checklist....\"></input>\n                </form>\n                {checklists ? checklists.map(eachCheckList => <CheckList list={eachCheckList} deleteCheckList={this.props.deleteCheckList} \n                    addItemToCheckList={this.props.addItemToCheckList}\n                    deleteCheckListItem={this.props.deleteCheckListItem}\n                    updateCheckListItem={this.props.updateCheckListItem}\n                />) : null }\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default Modal; \n","import React, { Component } from 'react';\nimport RestAPI from './components/RestAPI'\nimport Header from './components/Header';\nimport Board from './components/Board';\nimport Modal from './components/Modal';\nimport './styles/App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      boardId : RestAPI.boardID,\n      boardData: {},\n      isData : false,\n      lists : [],\n      modalShow : false,\n      modalChildren : [],\n      cardTitle : \"\"\n    }\n    this.getData();\n    this.getLists();\n  }\n  \n  getData = () => {\n    RestAPI.getBoardData()\n      .then(res => res.json())\n      .then(feedData => this.setState({\n        boardData: feedData,\n        isData : true\n      }))\n      .catch(err => console.log(err))\n  }\n  getLists = () =>{\n    RestAPI.getLists()\n    .then(res => res.json())\n    .then(allLists => this.setState({ lists : allLists}))\n    .catch(err => console.log(err))\n  }\n  addNewList = (listName) =>{\n    RestAPI.addNewList(listName)\n    .then(res => res.json())\n    .then(newList => this.setState({lists : this.state.lists.concat(newList)}))\n    .catch(err => console.log(err))\n  }\n  deleteList = (id) =>{\n    RestAPI.deleteList(id)\n    .then(res => res.json())\n    .then(deletedList => this.setState({lists : this.state.lists.filter(list => list.id !== id)}))\n    .catch(err => console.log(err))\n  }\n  checkList = (cardID) =>{\n    RestAPI.getCheckList(cardID)\n    .then(res => res.json())\n    .then(checkLists => this.setState({modalChildren : checkLists, modalShow : true}))\n  }\n  addCheckList = (cardID, checkListName) =>{\n    RestAPI.AddCheckList(cardID, checkListName)\n    .then(res => res.json())\n    .then(data => (this.checkList(cardID)))\n  }\n  deleteCheckList = (checkListId, cardID) =>{\n    RestAPI.deleteCheckList(checkListId)\n    .then(res => res.json())\n    .then(data => this.checkList(cardID))\n  }\n  addItemToCheckList = (checkListId, checkListItemName, cardID) =>{\n    RestAPI.addItemToCheckList(checkListId, checkListItemName)\n    .then(res  => res.json())\n    .then(data => this.checkList(cardID))\n  }\n  deleteCheckListItem = (checkListId, checkListItemId, cardID) =>{\n    RestAPI.deleteCheckListItem(checkListId, checkListItemId)\n    .then(res => res.json())\n    .then(data =>  this.checkList(cardID))\n  }\n  updateCheckListItem = (cardID, checkListItemId, checkListId, state) =>{\n    RestAPI.updateCheckListItem(cardID, checkListItemId, checkListId, state)\n    .then(res => res.json())\n    .then(update => (this.checkList(cardID)))\n  }\n  close = () =>{\n    this.setState({modalShow : false})\n  }\n  render() {\n    if (!this.state.isData) {\n      return(\n        <div>Loading...</div>\n      )\n    }\n    const {name,prefs} = this.state.boardData;\n    let bgimage = {\n      backgroundImage: `url('${prefs.backgroundImage}')`,\n    };\n    return (\n      <div style={bgimage} className=\"App\">\n        <Header />  \n        <Board\n          name={name} \n          boardID={this.state.boardId} \n          lists={this.state.lists} \n          addNewList={this.addNewList} \n          deleteList={this.deleteList}\n          checkList={this.checkList}\n        />\n        <Modal\n          show={this.state.modalShow} \n          children={this.state.modalChildren} \n          cardTitle={this.state.cardTitle}\n          close={this.close}\n          addCheckList={this.addCheckList}\n          deleteCheckList={this.deleteCheckList}\n          addItemToCheckList={this.addItemToCheckList}\n          deleteCheckListItem={this.deleteCheckListItem}\n          updateCheckListItem={this.updateCheckListItem}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}